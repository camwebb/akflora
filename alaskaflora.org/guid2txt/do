#!/bin/gawk -E

@load "json"
@include "pw.awk"

BEGIN{
  
  header("ALA herbarium sheet OCR")
  
  split(ENVIRON["QUERY_STRING"], qs, "&")
  for (i in qs) {
    split(qs[i], qp, "=")
    f[qp[1]] = substr(urldecode(qp[2]),1,100)
  }

  # check for default page
  if (!f["guid"])
    defaulttext()
  
  # check for misformed GUID
  if (f["guid"] !~ /^UAMb?:(Herb|Alg):[0-9]+$/)
    error("GUID of wrong form. Must be: \"^UAMb?:(Herb|Alg):[0-9]+$\"")

  guid2url()
  # check for no media
  if (!url[f["guid"]])
    error("No JPEG image for that GUID")
  # check for language ; NOTE: specifying language does not seem to help
  if (!f["lang"])
    error("No Language specified")

  pw()
  "curl -s -X POST "                                                    \
    "-H 'Authorization: Bearer " APITOKEN "' "                          \
    "-H 'Content-Type: application/json' "                              \
    "-d '{\"providers\": \"google\",\"language\": \"" f["lang"] "\", "  \
    "\"file_url\": \"" url[f["guid"]] \
    "\"}' https://api.edenai.run/v2/ocr/ocr"    \
    | getline json
    
  if (!json::from_json(json, data))
    error("ERROR: API Query or JSON import failed.")
  
  print "<p><b>" f["guid"] "</b></p>"
  print "<p style=\"border: thin silver solid; padding:20px; "    \
    "font-family:monospace;width:500px;\">"                       \
    data["google"]["text"] "</p>"
  print "<br/><a target=\"_blank\" href=\"" url[f["guid"]]      \
    "\"><img src=\"" url[f["guid"]] "\" width=\"200\"/></a>" 

  print "<br/><br/><p>[ <a href=\"do\">BACK</a> ]</p>"
  footer()
}
  
function guid2url() {
  while (getline < "guid2url")
    url[$1] = $2
  # will overwrite if there are several media for each GUID. OK.
}

function defaulttext() {
  print "<h1>ALA herbarium sheet OCR</h1>"
  print "<form action=\"do\">"                                          \
    "<p>GUID: <input type=\"text\" name=\"guid\" style=\"width:150px;\"/>" \
    "&#160;&#160;Label language: <select name=\"lang\"> "                     \
    "<option value=\"en\" selected=\"1\">English</option> "             \
    "<option value=\"ru\">Russian</option>"                             \
    "</select>"                                                         \
    "&#160;&#160;&#160;<input type=\"submit\" value=\"Submit\"/>"       \
    "</p></form>"
  footer()
  exit 0
}

function error(text) {
  print "<p><b>" text "</b></p>"
  print "<br/><br/><p>[ <a href=\"do\">BACK</a> ]</p>"
  footer()
  exit 1
}

function header(title) {
  
  # Use html5
  print "Content-type: text/html\n"
  print "<!DOCTYPE html>"
  print "<html xmlns=\"http://www.w3.org/1999/xhtml\">"
  print "<head><title>" title "</title>"
  print "<meta http-equiv=\"Content-Type\" content=\"text/html; \
           charset=utf-8\" />"
  print "<link href=\"https://fonts.googleapis.com/css?family=Montserrat\" \
           rel=\"stylesheet\"/>"
  print "<link href=\"../img/akflora.png\" rel=\"shortcut icon\" \
           type=\"image/x-icon\"/>"
  print "<style>"
  print "body { font-size: 14px; font-family: 'Montserrat', "    \
    "Verdana, Arial, Helvetica, sans-serif; padding: 20px; "     \
    "position: absolute }"
  print "</style>"

  print "</head>\n<body>"
}


function footer() {
  print "</body>\n</html>";
}

function urldecode(text,   hex, i, hextab, decoded, len, c, c1, c2, code) {
  # based on Heiner Steven's http://www.shelldorado.com/scripts/cmds/urldecode
  split("0 1 2 3 4 5 6 7 8 9 a b c d e f", hex, " ")
  for (i=0; i<16; i++)
    hextab[hex[i+1]] = i
  decoded = "" ; i = 1 ; len = length(text)
  while ( i <= len ) {
    c = substr (text, i, 1)
    if ( c == "%" ) 
      if ( i+2 <= len ) {
        c1 = tolower(substr(text, i+1, 1)); c2 = tolower(substr(text, i+2, 1))
        if ( hextab [c1] != "" || hextab [c2] != "" ) {
          if ( ( (c1 >= 2) && ((c1 c2) != "7f") )   \
               || (c1 == 0 && c2 ~ "[9acd]") )
            c = sprintf("%c", 0 + hextab [c1] * 16 + hextab [c2] + 0)
          else
            c = " "
          i = i + 2
        }
      }
    else if ( c == "+" )
      c = " "
    decoded = decoded c
    ++i
  }
  gsub(/\r\n/, "\n", decoded);
  gsub(/\n*$/,"",decoded);
  return decoded
}
